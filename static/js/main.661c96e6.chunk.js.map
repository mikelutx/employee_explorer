{"version":3,"sources":["components/searchForm.tsx","components/header.tsx","pages/welcome.tsx","components/employee/employeeCard.tsx","components/employee/employeeList.tsx","components/breadCrumb.tsx","service/employeeApi.tsx","components/spinner.tsx","components/HoCs/withLoadingAndError.tsx","pages/searchResult.tsx","pages/employeeDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchForm","size","history","useHistory","useState","keyword","setKeyword","className","onSubmit","e","preventDefault","trim","push","type","placeholder","aria-label","onChange","target","value","Header","href","onClick","data-toggle","data-target","aria-controls","aria-expanded","id","Welcome","EmployeeCard","employee","clickable","name","title","subordinates","length","EmployeeList","employeeList","employees","result","empSet","Set","forEach","has","add","removeDuplicates","map","BreadCrumb","children","aria-current","APIURL","LOCALSTORAGE_PREFIX","ENABLE_LOCALSTORAGE","process","REACT_APP_ENABLE_LOCALSTORAGE","a","getEmployeeDetail","then","toLowerCase","url","encodeURIComponent","employeeInfo","localStorage","getItem","employeeObj","JSON","parse","fetch","data","json","Array","isArray","empObj","getFormatName","setItem","stringify","includes","words","split","word","toUpperCase","substr","getMultiEmployees","names","promises","Promise","all","getEmployeeAndSubs","subs","new_subs","sub","concat","console","log","Spinner","role","withLoadingAndError","Component","this","props","loading","error","React","EmployeeListWithLoadingAndError","SearchResult","setEmployeeList","isLoading","setIsLoading","setError","useEffect","searchEmployee","catch","EmployeeCardWithLoadingAndError","EmployeeDetail","setEmployee","subOrdinates","setSubOrdinates","isSubLoading","setIsSubLoading","indirectSubOrdinates","setIndirectSubOrdinates","isIndSubLoading","setIsIndSubLoading","getIndirectSubOrdinates","employeeAndSubs","prevSubs","goBack","App","exact","path","render","match","params","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.661c96e6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\ninterface Props {\n  size?: \"sm\" | \"lg\";\n}\nconst SearchForm: React.FC<Props> = ({ size = \"sm\" }) => {\n  const history = useHistory();\n\n  const [keyword, setKeyword] = useState<string>(\"\");\n\n  const onTextInputChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    e.preventDefault();\n    setKeyword(e.target.value);\n  };\n\n  const onSubmitHandler: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    if (keyword.trim() !== \"\") {\n      history.push(`/search/${keyword.trim()}`);\n    }\n  };\n  return (\n    <form className=\"my-2 my-lg-0\" onSubmit={onSubmitHandler}>\n      <div\n        className={size === \"lg\" ? \"input-group input-group-lg\" : \"input-group\"}\n      >\n        <input\n          className=\"form-control my-2 my-sm-0\"\n          type=\"search\"\n          placeholder={\n            size === \"lg\"\n              ? \"Search for employee, e.g. John Hartman\"\n              : \"Search...\"\n          }\n          aria-label=\"Search\"\n          onChange={onTextInputChange}\n          value={keyword}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchForm from \"./searchForm\";\n\nconst Header: React.FC = () => {\n  const history = useHistory();\n\n  const navToHome: React.MouseEventHandler<HTMLAnchorElement> = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"/\" onClick={navToHome}>\n          Employee Explorer\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\"></ul>\n          <SearchForm />\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport SearchForm from \"./../components/searchForm\";\n\nexport default function Welcome() {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4\">Welcome</h1>\n      <p className=\"lead\">\n        Employee explorer helps you to find people in org chart.\n      </p>\n      <hr className=\"my-4\" />\n      <p>Search for the employee's full name.</p>\n      <SearchForm size=\"lg\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { mEmployee } from \"../../model/mEmployee\";\nimport { useHistory } from \"react-router-dom\";\ninterface Props {\n  employee: mEmployee | null | undefined;\n  clickable?: boolean;\n}\n\nconst EmployeeCard: React.FC<Props> = ({ employee, clickable = true }) => {\n  const history = useHistory();\n\n  const navToDetailPage: React.MouseEventHandler<HTMLAnchorElement> = (e) => {\n    e.preventDefault();\n    history.push(`/employee/${employee?.name}`);\n  };\n\n  if (employee) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{employee.name}</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted\">{employee.title}</h6>\n          {employee.subordinates && employee.subordinates.length > 0 ? (\n            <p>{`${employee.subordinates.length} subordinate(s)`}</p>\n          ) : (\n            <p className=\"font-italic\">{\"Individual Contributor\"}</p>\n          )}\n          {clickable && (\n            <a href=\"/\" className=\"btn btn-primary\" onClick={navToDetailPage}>\n              View\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  } else return null;\n};\n\nexport default EmployeeCard;\n","import React from \"react\";\nimport { mEmployee } from \"../../model/mEmployee\";\nimport EmployeeCard from \"./employeeCard\";\n\ninterface Props {\n  employeeList: mEmployee[];\n}\n\nconst EmployeeList: React.FC<Props> = ({ employeeList }) => {\n  /* remove duplicated employees from list, \"Aila Hodgson\" is duplicated in data source */\n  function removeDuplicates(employees: mEmployee[]): mEmployee[] {\n    let result: mEmployee[] = [];\n    const empSet = new Set();\n    employees.forEach((employee) => {\n      if (!empSet.has(employee.name)) {\n        result.push(employee);\n        empSet.add(employee.name);\n      }\n    });\n    return result;\n  }\n\n  return (\n    <div className=\"row\">\n      {removeDuplicates(employeeList).map((employee) => (\n        <div className=\"col-sm-6 col-md-4 col-lg-3 mb-3\" key={employee.name}>\n          <EmployeeCard employee={employee} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default EmployeeList;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\nconst BreadCrumb: React.FC<Props> = ({ children }) => {\n  const history = useHistory();\n\n  const navToHome: React.MouseEventHandler<HTMLAnchorElement> = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"/\" onClick={navToHome}>\n            Home\n          </a>\n        </li>\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n          {children}\n        </li>\n      </ol>\n    </nav>\n  );\n};\n\nexport default BreadCrumb;\n","import { mEmployee } from \"../model/mEmployee\";\nconst APIURL = \"https://api.additivasia.io/api/v1/assignment/employees/\";\nconst LOCALSTORAGE_PREFIX = \"empapp_\";\nconst ENABLE_LOCALSTORAGE = process.env.REACT_APP_ENABLE_LOCALSTORAGE;\n\nconsole.log(process.env);\n\nexport async function searchEmployee(name: string): Promise<mEmployee[]> {\n  return getEmployeeDetail(name).then((employee) => {\n    if (employee !== null) return [employee];\n    else return [];\n  });\n}\nexport async function getEmployeeDetail(\n  name: string\n): Promise<mEmployee | null> {\n  name = name.toLowerCase();\n\n  const url = APIURL + encodeURIComponent(name);\n\n  if (ENABLE_LOCALSTORAGE) {\n    try {\n      const employeeInfo: string | null = localStorage.getItem(\n        LOCALSTORAGE_PREFIX + encodeURIComponent(name)\n      );\n      if (employeeInfo !== null) {\n        let employeeObj: mEmployee = JSON.parse(employeeInfo);\n        return employeeObj;\n      }\n    } catch {\n      //quiet\n    }\n  }\n\n  return fetch(url)\n    .then((data) => data.json())\n    .then((employee) => {\n      if (Array.isArray(employee)) {\n        const empObj = {\n          name: getFormatName(name),\n          title: employee[0],\n          subordinates:\n            employee.length >= 2 && employee[1][\"direct-subordinates\"],\n        };\n        if (ENABLE_LOCALSTORAGE) {\n          try {\n            localStorage.setItem(\n              LOCALSTORAGE_PREFIX + encodeURIComponent(name),\n              JSON.stringify(empObj)\n            );\n          } catch {}\n        }\n        return empObj;\n      } else {\n        return null;\n      }\n    });\n}\n\nfunction getFormatName(name: string): string {\n  if (!name || name.length === 0 || !name.includes(\" \")) return name;\n\n  const words: string[] = name.split(\" \");\n  let result: string = \"\";\n  words.forEach((word) => {\n    if (result !== \"\") result += \" \";\n    result += word[0].toUpperCase() + word.substr(1);\n  });\n  return result;\n}\n\nasync function getMultiEmployees(\n  names: string[]\n): Promise<(mEmployee | null)[]> {\n  const promises = names.map((name) => getEmployeeDetail(name));\n  return Promise.all(promises);\n}\n\nexport async function getEmployeeAndSubs(\n  names: string[]\n): Promise<[mEmployee[], string[]]> {\n  return getMultiEmployees(names).then((subs) => {\n    let employees: mEmployee[] = [];\n    let new_subs: string[] = [];\n    subs.forEach((sub) => {\n      if (sub !== null) {\n        employees.push(sub);\n        if (sub.subordinates && sub.subordinates.length > 0) {\n          new_subs = new_subs.concat(sub.subordinates);\n        }\n      }\n    });\n    return [employees, new_subs];\n  });\n}\n","import React from \"react\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Spinner from \"../spinner\";\n\ninterface Props {\n  loading: boolean;\n  error?: string;\n}\n\nconst withLoadingAndError = <P extends object>(\n  Component: React.ComponentType<P>\n) =>\n  class WithLoading extends React.Component<P & Props> {\n    render() {\n      const { loading, error, ...props } = this.props;\n      if (error && error !== \"\") {\n        return (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n          </div>\n        );\n      } else {\n        return loading ? <Spinner /> : <Component {...(props as P)} />;\n      }\n    }\n  };\nexport default withLoadingAndError;\n","import React, { useState, useEffect } from \"react\";\nimport { mEmployee } from \"./../model/mEmployee\";\nimport EmployeeList from \"./../components/employee/employeeList\";\nimport BreadCrumb from \"./../components/breadCrumb\";\nimport { searchEmployee } from \"./../service/employeeApi\";\nimport withLoadingAndError from \"../components/HoCs/withLoadingAndError\";\nconst EmployeeListWithLoadingAndError = withLoadingAndError(EmployeeList);\n\ninterface Props {\n  name: string;\n}\n\nconst SearchResult: React.FC<Props> = ({ name }) => {\n  const [employeeList, setEmployeeList] = useState<mEmployee[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(\"\");\n    searchEmployee(name)\n      .then((data) => {\n        if (data.length === 0) {\n          setError(`We could not find employee with name ${name}`);\n          return;\n        }\n        setEmployeeList(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setError(`Error happened when searching for employee ${name}`);\n      });\n  }, [name]);\n\n  return (\n    <>\n      <BreadCrumb>{`Search Result for \"${name}\"`}</BreadCrumb>\n      <EmployeeListWithLoadingAndError\n        loading={isLoading}\n        employeeList={employeeList}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default SearchResult;\n","import React, { useState, useEffect } from \"react\";\nimport { mEmployee } from \"./../model/mEmployee\";\nimport BreadCrumb from \"./../components/breadCrumb\";\nimport EmployeeCard from \"./../components/employee/employeeCard\";\nimport EmployeeList from \"./../components/employee/employeeList\";\nimport {\n  getEmployeeDetail,\n  getEmployeeAndSubs,\n} from \"./../service/employeeApi\";\nimport { useHistory } from \"react-router-dom\";\nimport withLoadingAndError from \"../components/HoCs/withLoadingAndError\";\nconst EmployeeCardWithLoadingAndError = withLoadingAndError(EmployeeCard);\nconst EmployeeListWithLoadingAndError = withLoadingAndError(EmployeeList);\n\ninterface Props {\n  name: string;\n}\n\nconst EmployeeDetail: React.FC<Props> = ({ name }) => {\n  const history = useHistory();\n\n  const [employee, setEmployee] = useState<mEmployee | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  const [subOrdinates, setSubOrdinates] = useState<mEmployee[]>([]);\n  const [isSubLoading, setIsSubLoading] = useState<boolean>(false);\n\n  const [indirectSubOrdinates, setIndirectSubOrdinates] = useState<mEmployee[]>(\n    []\n  );\n  const [isIndSubLoading, setIsIndSubLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setEmployee(null);\n    setSubOrdinates([]);\n    setIndirectSubOrdinates([]);\n\n    const getIndirectSubOrdinates = (names: string[]) => {\n      getEmployeeAndSubs(names).then((employeeAndSubs) => {\n        setIndirectSubOrdinates((prevSubs) =>\n          prevSubs.concat(employeeAndSubs[0])\n        );\n        if (employeeAndSubs[1].length > 0) {\n          getIndirectSubOrdinates(employeeAndSubs[1]);\n        } else {\n          setIsIndSubLoading(false);\n        }\n      });\n    };\n\n    setIsLoading(true);\n    getEmployeeDetail(name).then((data) => {\n      if (data === null) {\n        setError(`We could not find employee with name ${name}`);\n        return;\n      }\n      setEmployee(data);\n      setIsLoading(false);\n      if (data && data.subordinates && data.subordinates.length > 0) {\n        setIsSubLoading(true);\n        getEmployeeAndSubs(data.subordinates).then((employeeAndSubs) => {\n          setSubOrdinates(employeeAndSubs[0]);\n          setIsSubLoading(false);\n          if (employeeAndSubs[1].length > 0) {\n            setIsIndSubLoading(true);\n            getIndirectSubOrdinates(employeeAndSubs[1]);\n          }\n        });\n      }\n    });\n  }, [name]);\n\n  const navBack: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  return (\n    <>\n      <BreadCrumb>{`Employee: \"${name}\"`}</BreadCrumb>\n      <div className=\"mb-3\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={navBack}>\n          Go Back\n        </button>\n      </div>\n      <div>\n        <EmployeeCardWithLoadingAndError\n          loading={isLoading}\n          employee={employee}\n          clickable={false}\n          error={error}\n        />\n      </div>\n      {employee && employee.subordinates && employee.subordinates.length > 0 && (\n        <>\n          <h4 className=\"mt-3\">{`Direct subordinate(s) of ${name}`}</h4>\n          <EmployeeListWithLoadingAndError\n            loading={isSubLoading}\n            employeeList={subOrdinates}\n          />\n          <h4 className=\"mt-3\">{`Indirect subordinate(s) of ${name}`}</h4>\n          <EmployeeListWithLoadingAndError\n            loading={isIndSubLoading}\n            employeeList={indirectSubOrdinates}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EmployeeDetail;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, BrowserRouter, Route, HashRouter } from \"react-router-dom\";\nimport Header from \"./components/header\";\nimport Welcome from \"./pages/welcome\";\nimport SearchResult from \"./pages/searchResult\";\nimport EmployeeDetail from \"./pages/employeeDetail\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header />\n      <main className=\"container\">\n        <section>\n          <Switch>\n            <Route\n              exact\n              path={\"/search/:name\"}\n              render={(props) => (\n                <SearchResult name={props.match.params.name} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path={\"/employee/:name\"}\n              render={(props) => (\n                <EmployeeDetail name={props.match.params.name} />\n              )}\n            ></Route>\n            <Route path={\"/\"} component={Welcome} />\n          </Switch>\n        </section>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}